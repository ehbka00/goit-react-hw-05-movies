{"version":3,"file":"static/js/563.c8c27ae9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.jsx","services/api.js","services/toast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movies_wrapper__s+FQe\",\"searchField\":\"movies_searchField__Xauct\",\"btn\":\"movies_btn__wCcxe\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport showErrorMessage from 'services/toast';\n\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const param = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await fetchMovies(param);\n        if (response.status === 200) {\n          setMovies(response.data.results);\n        } else {\n          throw new Error('Error');\n        }\n      } catch (error) {\n        setMovies([]);\n        showErrorMessage(error.message);\n      }\n    };\n    if (param === '') return;\n    getMovies();\n  }, [param]);\n\n  const onSubmitHandle = evt => {\n    evt.preventDefault();\n\n    const { value } = evt.target.firstChild;\n    if (value === '') return setSearchParams({});\n    setSearchParams({ query: value });\n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <div className={css.wrapper}>\n        <form onSubmit={onSubmitHandle}>\n          <input type=\"text\" name=\"search\" className={css.searchField} />\n          <button type=\"submit\" className={css.btn} name=\"bnt\">\n            Search\n          </button>\n        </form>\n      </div>\n      <div className={css.moviesList}>\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={location}>\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst api_token =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYTA3YTdlODE5Zjg3N2M0ZDQxZjUxMDY2N2JlMzcwMSIsInN1YiI6IjY1YTkzMWY2N2QyYmMxMDEyNmVhNzgxZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KMcJHNqVy-cC3arQvSZwuCc208umnP39oIcNPIsmtKU';\nconst request = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${api_token}`,\n  },\n});\n\nexport const fetchTrends = () => {\n  return request.get('/trending/movie/day?language=en-US');\n};\n\nexport const fetchMovieDetails = movieId => {\n  return request.get(`/movie/${movieId}?language=en-US`);\n};\n\nexport const fetchMovieCast = movieId => {\n  return request.get(`/movie/${movieId}/credits?language=en-US`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return request.get(`/movie/${movieId}/reviews?language=en-US`);\n};\n\nexport const fetchMovies = query => {\n  return request.get(\n    `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n  );\n};\n","import { toast } from 'react-toastify';\n\nconst showErrorMessage = errMessage =>\n  toast.error(errMessage, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n    transition: 'Zoom',\n  });\n\nexport default showErrorMessage;\n"],"names":["_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movies","setMovies","location","useLocation","param","get","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovies","sent","status","data","results","Error","t0","showErrorMessage","message","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","className","css","onSubmit","evt","preventDefault","value","target","firstChild","query","reset","type","name","map","movie","Link","to","concat","id","state","original_title","request","axios","baseURL","headers","accept","Authorization","fetchTrends","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","errMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition"],"sourceRoot":""}